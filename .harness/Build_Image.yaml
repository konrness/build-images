pipeline:
  projectIdentifier: Konr
  orgIdentifier: SE_Sandbox
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: Konr_Github
        repoName: build-images
        build: <+input>
  stages:
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.cidemo
              namespace: default
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build Image
                  identifier: BuildImage
                  spec:
                    connectorRef: konrness_Docker_Hub
                    repo: konrness/<+pipeline.variables.name>
                    tags:
                      - 0.<+pipeline.sequenceId>
                    dockerfile: <+pipeline.variables.name>/Dockerfile
                    context: <+pipeline.variables.name>
                    labels:
                      build_id: <+pipeline.sequenceId>
                    remoteCacheRepo: konrness/harness-build-layer-cache
                    resources:
                      limits:
                        memory: 1.5G
                        cpu: "1"
    - stage:
        name: Test
        identifier: Test
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Run
                  name: Test
                  identifier: TestScript
                  spec:
                    connectorRef: konrness_Docker_Hub
                    image: konrness/<+pipeline.variables.name>:0.<+pipeline.sequenceId>
                    shell: Sh
                    command: |-
                      if [ -d <+pipeline.variables.name>/tests/ ]
                      then
                        cd <+pipeline.variables.name>/tests/
                        ./test.sh
                      else
                        echo "No Tests"
                      fi
              - step:
                  type: Plugin
                  name: Plugin
                  identifier: Plugin
                  spec:
                    connectorRef: konrness_Docker_Hub
                    image: konrness/<+pipeline.variables.name>:0.<+pipeline.sequenceId>
                    settings:
                      host: https://konrtest.testrail.io
                      user: konrness@gmail.com
                      password: <+stage.variables.testrail_password>
                      debug: "true"
                      run_id: "2"
                      fail_on_priority: "2"
                      failed_status_id: "5"
                  failureStrategies:
                    - onFailure:
                        errors:
                          - Unknown
                        action:
                          type: Ignore
              - step:
                  type: Run
                  name: Retag latest
                  identifier: Retag_latest
                  spec:
                    connectorRef: konrness_Docker_Hub
                    image: docker:latest
                    shell: Sh
                    command: |-
                      while ! docker ps ;do
                          echo "Docker not availble yet"
                          sleep 1
                      done
                      echo "Docker DiND ready"

                      # Login
                      echo <+stage.variables.docker_password> > docker_password.txt
                      cat docker_password.txt | docker login -u konrness --password-stdin

                      # Pull and Retag latest
                      docker pull konrness/<+pipeline.variables.name>:0.<+pipeline.sequenceId>
                      docker tag konrness/<+pipeline.variables.name>:0.<+pipeline.sequenceId> konrness/<+pipeline.variables.name>:latest
                      docker push konrness/<+pipeline.variables.name>:latest
                    privileged: true
          infrastructure:
            useFromStage: Build
          sharedPaths:
            - /var/run
            - /var/lib/docker
          serviceDependencies:
            - identifier: dind
              name: dind
              type: Service
              spec:
                connectorRef: konrness_Docker_Hub
                image: docker:dind
                privileged: true
        variables:
          - name: docker_username
            type: String
            value: konrness
          - name: docker_password
            type: Secret
            value: konrness_DockerHub
          - name: testrail_password
            type: Secret
            value: TestRail_Password
  identifier: Build_Image
  name: Build Image
  variables:
    - name: name
      type: String
      value: <+input>.allowedValues(testrail,testrail-validate,debug,harness-delegate-gcloud,wiz-to-harness,kics-to-harness)
  storeType: ""
  allowStageExecutions: true
