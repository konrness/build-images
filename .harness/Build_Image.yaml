---
pipeline:
  projectIdentifier: "Konr"
  orgIdentifier: "SE_Sandbox"
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: "Konr_Github"
        repoName: "build-images"
        build: "<+input>"
  stages:
  - stage:
      name: "Build"
      identifier: "Build"
      description: ""
      type: "CI"
      spec:
        cloneCodebase: true
        infrastructure:
          type: "KubernetesDirect"
          spec:
            connectorRef: "account.cidemo"
            namespace: "default"
            automountServiceAccountToken: true
            nodeSelector: {}
            os: "Linux"
        execution:
          steps:
          - step:
              type: "BuildAndPushDockerRegistry"
              name: "TestRail"
              identifier: "TestRail"
              spec:
                connectorRef: "konrness_Docker_Hub"
                repo: "konrness/testrail"
                tags:
                - "0.<+pipeline.sequenceId>"
                dockerfile: "testrail/Dockerfile"
                context: "testrail"
                labels:
                  build_id: "<+pipeline.sequenceId>"
  - stage:
      name: "Test"
      identifier: "Test"
      type: "CI"
      spec:
        cloneCodebase: true
        execution:
          steps:
          - step:
              type: "Run"
              name: "TestRail"
              identifier: "TestRail"
              spec:
                connectorRef: "konrness_Docker_Hub"
                image: "konrness/testrail:0.<+pipeline.sequenceId>"
                shell: "Sh"
                command: "cd testrail\n./test.sh"
          - step:
              type: "Run"
              name: "Retag latest"
              identifier: "Retag_latest"
              spec:
                connectorRef: "konrness_Docker_Hub"
                image: "docker:latest"
                shell: "Sh"
                command: "while ! docker ps ;do\n    echo \"Docker not availble yet\"\
                  \n    sleep 1\ndone\necho \"Docker DiND ready\"\n\n# Login\necho\
                  \ <+stage.variables.docker_password> > my_password.txt\ncat docker_password.txt\
                  \ | docker login -u konrness --password-stdin\n\n# Pull and Retag\
                  \ latest\ndocker pull konrness/testrail:0.<+pipeline.sequenceId>\n\
                  docker tag konrness/testrail:0.<+pipeline.sequenceId> konrness/testrail:latest\n\
                  docker push konrness/testrail:latest"
                privileged: true
        infrastructure:
          useFromStage: "Build"
        sharedPaths:
        - "/var/run"
        - "/var/lib/docker"
        serviceDependencies:
        - identifier: "dind"
          name: "dind"
          type: "Service"
          spec:
            connectorRef: "konrness_Docker_Hub"
            image: "docker:dind"
            privileged: true
      variables:
      - name: "docker_username"
        type: "String"
        value: "konrness"
      - name: "docker_password"
        type: "Secret"
        value: "konrness_DockerHub"
  identifier: "Build_Image"
  name: "Build Image"
